// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  username       String   @unique
  image          String?
  hashedPassword String
  gender         String
  dateOfBirth    DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  bio            String?

  postIds   String[] @db.ObjectId
  userPosts Posts[]  @relation("Posts")

  commentsIds String[]  @db.ObjectId
  comments    Comment[] @relation("commenter")

  friendIds        String[] @db.ObjectId
  acceptrequestIds String[] @db.ObjectId
  sentrequestIds   String[] @db.ObjectId
}

model Posts {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  media       String[]
  description String?
  createdAt   DateTime @default(now())

  likes String[] @db.ObjectId

  createdById String @db.ObjectId
  createdBy   Users  @relation("Posts", fields: [createdById], references: [id], onDelete: Cascade)

  commentsId String[]  @db.ObjectId
  comments   Comment[] @relation("comment")
}

model Comment {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  text String

  commenterId String @db.ObjectId
  commenter   Users  @relation("commenter", fields: [commenterId], references: [id], onDelete: Cascade)

  postId String @db.ObjectId
  post   Posts  @relation("comment", fields: [postId], references: [id], onDelete: Cascade)
}
